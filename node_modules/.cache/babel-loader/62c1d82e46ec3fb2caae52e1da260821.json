{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/prismic/html-serializer.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/prismic/html-serializer.js","mtime":1617458804138},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["/**\n * To learn more about HTML Serializer check out the Prismic documentation\n * https://prismic.io/docs/vuejs/beyond-the-api/html-serializer\n */\nimport prismicDOM from 'prismic-dom';\nimport linkResolver from \"./link-resolver\";\nvar Elements = prismicDOM.RichText.Elements;\nexport default function (type, element, content, children) {\n  // Generate links to Prismic Documents as <router-link> components\n  // Present by default, it is recommended to keep this\n  if (type === Elements.hyperlink) {\n    var result = '';\n    var url = prismicDOM.Link.url(element.data, linkResolver);\n\n    if (element.data.link_type === 'Document') {\n      result = \"<router-link to=\\\"\".concat(url, \"\\\">\").concat(content, \"</router-link>\");\n    } else {\n      var target = element.data.target ? \"target=\\\"'\".concat(element.data.target, \"'\\\" rel=\\\"noopener\\\"\") : '';\n      result = \"<a href=\\\"\".concat(url, \"\\\" \").concat(target, \">\").concat(content, \"</a>\");\n    }\n\n    return result;\n  } // If the image is also a link to a Prismic Document, it will return a <router-link> component\n  // Present by default, it is recommended to keep this\n\n\n  if (type === Elements.image) {\n    var _result = \"<img src=\\\"\".concat(element.url, \"\\\" alt=\\\"\").concat(element.alt || '', \"\\\" copyright=\\\"\").concat(element.copyright || '', \"\\\">\");\n\n    if (element.linkTo) {\n      var _url = prismicDOM.Link.url(element.linkTo, linkResolver);\n\n      if (element.linkTo.link_type === 'Document') {\n        _result = \"<router-link to=\\\"\".concat(_url, \"\\\">\").concat(_result, \"</router-link>\");\n      } else {\n        var _target = element.linkTo.target ? \"target=\\\"\".concat(element.linkTo.target, \"\\\" rel=\\\"noopener\\\"\") : '';\n\n        _result = \"<a href=\\\"\".concat(_url, \"\\\" \").concat(_target, \">\").concat(_result, \"</a>\");\n      }\n    }\n\n    var wrapperClassList = [element.label || '', 'block-img'];\n    _result = \"<p class=\\\"\".concat(wrapperClassList.join(' '), \"\\\">\").concat(_result, \"</p>\");\n    return _result;\n  } // Return null to stick with the default behavior for everything else\n\n\n  return null;\n}",{"version":3,"sources":["/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/prismic/html-serializer.js"],"names":["prismicDOM","linkResolver","Elements","RichText","type","element","content","children","hyperlink","result","url","Link","data","link_type","target","image","alt","copyright","linkTo","wrapperClassList","label","join"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP;AAEA,IAAMC,QAAQ,GAAGF,UAAU,CAACG,QAAX,CAAoBD,QAArC;AAEA,eAAe,UAAUE,IAAV,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACzD;AACA;AACA,MAAIH,IAAI,KAAKF,QAAQ,CAACM,SAAtB,EAAiC;AAC/B,QAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,GAAG,GAAGV,UAAU,CAACW,IAAX,CAAgBD,GAAhB,CAAoBL,OAAO,CAACO,IAA5B,EAAkCX,YAAlC,CAAZ;;AAEA,QAAII,OAAO,CAACO,IAAR,CAAaC,SAAb,KAA2B,UAA/B,EAA2C;AACzCJ,MAAAA,MAAM,+BAAuBC,GAAvB,gBAA+BJ,OAA/B,mBAAN;AACD,KAFD,MAEO;AACL,UAAMQ,MAAM,GAAGT,OAAO,CAACO,IAAR,CAAaE,MAAb,uBAAkCT,OAAO,CAACO,IAAR,CAAaE,MAA/C,4BAA2E,EAA1F;AACAL,MAAAA,MAAM,uBAAeC,GAAf,gBAAuBI,MAAvB,cAAiCR,OAAjC,SAAN;AACD;;AACD,WAAOG,MAAP;AACD,GAdwD,CAgBzD;AACA;;;AACA,MAAIL,IAAI,KAAKF,QAAQ,CAACa,KAAtB,EAA6B;AAC3B,QAAIN,OAAM,wBAAgBJ,OAAO,CAACK,GAAxB,sBAAqCL,OAAO,CAACW,GAAR,IAAe,EAApD,4BAAsEX,OAAO,CAACY,SAAR,IAAqB,EAA3F,QAAV;;AAEA,QAAIZ,OAAO,CAACa,MAAZ,EAAoB;AAClB,UAAMR,IAAG,GAAGV,UAAU,CAACW,IAAX,CAAgBD,GAAhB,CAAoBL,OAAO,CAACa,MAA5B,EAAoCjB,YAApC,CAAZ;;AAEA,UAAII,OAAO,CAACa,MAAR,CAAeL,SAAf,KAA6B,UAAjC,EAA6C;AAC3CJ,QAAAA,OAAM,+BAAuBC,IAAvB,gBAA+BD,OAA/B,mBAAN;AACD,OAFD,MAEO;AACL,YAAMK,OAAM,GAAGT,OAAO,CAACa,MAAR,CAAeJ,MAAf,sBAAmCT,OAAO,CAACa,MAAR,CAAeJ,MAAlD,2BAA6E,EAA5F;;AACAL,QAAAA,OAAM,uBAAeC,IAAf,gBAAuBI,OAAvB,cAAiCL,OAAjC,SAAN;AACD;AACF;;AACD,QAAMU,gBAAgB,GAAG,CAACd,OAAO,CAACe,KAAR,IAAiB,EAAlB,EAAsB,WAAtB,CAAzB;AACAX,IAAAA,OAAM,wBAAgBU,gBAAgB,CAACE,IAAjB,CAAsB,GAAtB,CAAhB,gBAA+CZ,OAA/C,SAAN;AACA,WAAOA,OAAP;AACD,GAlCwD,CAoCzD;;;AACA,SAAO,IAAP;AACD","sourcesContent":["/**\n * To learn more about HTML Serializer check out the Prismic documentation\n * https://prismic.io/docs/vuejs/beyond-the-api/html-serializer\n */\n\nimport prismicDOM from 'prismic-dom'\nimport linkResolver from './link-resolver'\n\nconst Elements = prismicDOM.RichText.Elements\n\nexport default function (type, element, content, children) {\n  // Generate links to Prismic Documents as <router-link> components\n  // Present by default, it is recommended to keep this\n  if (type === Elements.hyperlink) {\n    let result = ''\n    const url = prismicDOM.Link.url(element.data, linkResolver)\n\n    if (element.data.link_type === 'Document') {\n      result = `<router-link to=\"${url}\">${content}</router-link>`\n    } else {\n      const target = element.data.target ? `target=\"'${element.data.target}'\" rel=\"noopener\"` : ''\n      result = `<a href=\"${url}\" ${target}>${content}</a>`\n    }\n    return result\n  }\n\n  // If the image is also a link to a Prismic Document, it will return a <router-link> component\n  // Present by default, it is recommended to keep this\n  if (type === Elements.image) {\n    let result = `<img src=\"${element.url}\" alt=\"${element.alt || ''}\" copyright=\"${element.copyright || ''}\">`\n\n    if (element.linkTo) {\n      const url = prismicDOM.Link.url(element.linkTo, linkResolver)\n\n      if (element.linkTo.link_type === 'Document') {\n        result = `<router-link to=\"${url}\">${result}</router-link>`\n      } else {\n        const target = element.linkTo.target ? `target=\"${element.linkTo.target}\" rel=\"noopener\"` : ''\n        result = `<a href=\"${url}\" ${target}>${result}</a>`\n      }\n    }\n    const wrapperClassList = [element.label || '', 'block-img']\n    result = `<p class=\"${wrapperClassList.join(' ')}\">${result}</p>`\n    return result\n  }\n\n  // Return null to stick with the default behavior for everything else\n  return null\n}\n"]}]}