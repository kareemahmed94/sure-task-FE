{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/store/auth.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/store/auth.js","mtime":1617457659003},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import Vue from 'vue';\nexport default {\n  namespaced: true,\n  state: function state() {\n    return {};\n  },\n  actions: {\n    fetch: function fetch(data) {\n      return Vue.auth.fetch(data);\n    },\n    refresh: function refresh(data) {\n      return Vue.auth.refresh(data);\n    },\n    login: function login(ctx, data) {\n      data = data || {};\n      return new Promise(function (resolve, reject) {\n        Vue.auth.login({\n          url: 'auth/login',\n          data: data.body,\n          remember: data.remember,\n          staySignedIn: data.staySignedIn\n        }).then(function (res) {\n          if (data.remember) {\n            Vue.auth.remember(JSON.stringify({\n              name: ctx.getters.user.first_name\n            }));\n          }\n\n          Vue.router.push({\n            name: ctx.getters.user.type + '-landing'\n          });\n          resolve(res);\n        }, reject);\n      });\n    },\n    register: function register(ctx, data) {\n      data = data || {};\n      return new Promise(function (resolve, reject) {\n        Vue.auth.register({\n          url: 'auth/register',\n          data: data.body,\n          autoLogin: false\n        }).then(function () {\n          if (data.autoLogin) {\n            ctx.dispatch('login', data).then(resolve, reject);\n          }\n        }, reject);\n      });\n    },\n    impersonate: function impersonate(ctx, data) {\n      var props = this.getters['properties/data'];\n      console.log(props);\n      Vue.auth.impersonate({\n        url: 'auth/' + data.user.id + '/impersonate',\n        redirect: 'user-account'\n      });\n    },\n    unimpersonate: function unimpersonate() {\n      Vue.auth.unimpersonate({\n        redirect: 'admin-users'\n      });\n    },\n    logout: function logout() {\n      return Vue.auth.logout();\n    }\n  },\n  getters: {\n    user: function user() {\n      return Vue.auth.user();\n    },\n    impersonating: function impersonating() {\n      return Vue.auth.impersonating();\n    }\n  }\n};",{"version":3,"sources":["/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/store/auth.js"],"names":["Vue","namespaced","state","actions","fetch","data","auth","refresh","login","ctx","Promise","resolve","reject","url","body","remember","staySignedIn","then","res","JSON","stringify","name","getters","user","first_name","router","push","type","register","autoLogin","dispatch","impersonate","props","console","log","id","redirect","unimpersonate","logout","impersonating"],"mappings":"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","sourcesContent":["import Vue from 'vue';\n\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n\n        };\n    },\n\n    actions: {\n        fetch(data) {\n            return Vue.auth.fetch(data);\n        },\n\n        refresh(data) {\n            return Vue.auth.refresh(data);\n        },\n\n        login(ctx, data) {\n            data = data || {};\n\n            return new Promise((resolve, reject) => {\n                Vue.auth.login({\n                    url: 'auth/login',\n                    data: data.body,\n                    remember: data.remember,\n                    staySignedIn: data.staySignedIn,\n                })\n                    .then((res) => {\n                        if (data.remember) {\n                            Vue.auth.remember(JSON.stringify({\n                                name: ctx.getters.user.first_name\n                            }));\n                        }\n\n                        Vue.router.push({\n                            name: ctx.getters.user.type + '-landing'\n                        });\n\n                        resolve(res);\n                    }, reject);\n            });\n        },\n\n        register(ctx, data) {\n            data = data || {};\n\n            return new Promise((resolve, reject) => {\n                Vue.auth.register({\n                    url: 'auth/register',\n                    data: data.body,\n                    autoLogin: false,\n                })\n                    .then(() => {\n                        if (data.autoLogin) {\n                            ctx.dispatch('login', data).then(resolve, reject);\n                        }\n                    }, reject);\n            });\n        },\n\n        impersonate(ctx, data) {\n            var props = this.getters['properties/data'];\n\n            console.log(props)\n            Vue.auth.impersonate({\n                url: 'auth/' + data.user.id + '/impersonate',\n                redirect: 'user-account'\n            });\n        },\n\n        unimpersonate() {\n            Vue.auth.unimpersonate({\n                redirect: 'admin-users'\n            });\n        },\n\n        logout() {\n            return Vue.auth.logout();\n        },\n    },\n\n    getters: {\n        user() {\n            return Vue.auth.user();\n        },\n\n        impersonating() {\n            return Vue.auth.impersonating();\n        }\n    }\n}"]}]}