{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/mixins/colorable/index.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/mixins/colorable/index.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":1617458485530},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\nimport _defineProperty from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport _objectSpread from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport Vue from 'vue';\nimport { consoleError } from '../../util/console';\nimport { isCssColor } from '../../util/colorUtils';\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor: function setBackgroundColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread({}, data.style, {\n          'background-color': \"\".concat(color),\n          'border-color': \"\".concat(color)\n        });\n      } else if (color) {\n        data.class = _objectSpread({}, data.class, _defineProperty({}, color, true));\n      }\n\n      return data;\n    },\n    setTextColor: function setTextColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread({}, data.style, {\n          color: \"\".concat(color),\n          'caret-color': \"\".concat(color)\n        });\n      } else if (color) {\n        var _color$toString$trim$ = color.toString().trim().split(' ', 2),\n            _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n            colorName = _color$toString$trim$2[0],\n            colorModifier = _color$toString$trim$2[1];\n\n        data.class = _objectSpread({}, data.class, _defineProperty({}, colorName + '--text', true));\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n  }\n}); //# sourceMappingURL=index.js.map",{"version":3,"sources":["node_modules/vuetify/lib/mixins/colorable/index.js"],"names":["Vue","consoleError","isCssColor","extend","name","props","color","String","methods","setBackgroundColor","data","style","class","setTextColor","toString","trim","split","colorName","colorModifier"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,eAAeF,IAAIG,MAAJ,CAAW;AACxBC,QAAM,WADkB;AAExBC,SAAO;AACLC,WAAOC;AADF,GAFiB;AAKxBC,WAAS;AACPC,sBADO,8BACYH,KADZ,EAC8B;AAAA,UAAXI,IAAW,uEAAJ,EAAI;;AACnC,UAAI,OAAOA,KAAKC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAV,qBAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAEa;;AAE/C,eAAOS,IAAP;AACD;;AAED,UAAI,OAAOA,KAAKE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,qBAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAEa;;AAE/C,eAAOS,IAAP;AACD;;AAED,UAAIR,WAAWI,KAAX,CAAJ,EAAuB;AACrBI,aAAKC,KAAL,qBAAkBD,KAAKC,KAAvB;AACE,wCAAuBL,KAAvB,CADF;AAEE,oCAAmBA,KAAnB;AAFF;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAChBI,aAAKE,KAAL,qBAAkBF,KAAKE,KAAvB,sBACGN,KADH,EACW,IADX;AAGD;;AAED,aAAOI,IAAP;AACD,KA5BM;AA8BPG,gBA9BO,wBA8BMP,KA9BN,EA8BwB;AAAA,UAAXI,IAAW,uEAAJ,EAAI;;AAC7B,UAAI,OAAOA,KAAKC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAV,qBAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAEa;;AAE/C,eAAOS,IAAP;AACD;;AAED,UAAI,OAAOA,KAAKE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,qBAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAEa;;AAE/C,eAAOS,IAAP;AACD;;AAED,UAAIR,WAAWI,KAAX,CAAJ,EAAuB;AACrBI,aAAKC,KAAL,qBAAkBD,KAAKC,KAAvB;AACEL,2BAAUA,KAAV,CADF;AAEE,mCAAkBA,KAAlB;AAFF;AAID,OALD,MAKO,IAAIA,KAAJ,EAAW;AAAA,oCACmBA,MAAMQ,QAAN,GAAiBC,IAAjB,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADnB;AAAA;AAAA,YACTC,SADS;AAAA,YACEC,aADF;;AAEhBR,aAAKE,KAAL,qBAAkBF,KAAKE,KAAvB,sBACGK,YAAY,QADf,EAC0B,IAD1B;;AAIA,YAAIC,aAAJ,EAAmB;AACjBR,eAAKE,KAAL,CAAW,WAAWM,aAAtB,IAAuC,IAAvC;AACD;AACF;;AAED,aAAOR,IAAP;AACD;AA9DM;AALe,CAAX,CAAf,C,CAuEA","sourceRoot":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter","sourcesContent":["import Vue from 'vue';\nimport { consoleError } from '../../util/console';\nimport { isCssColor } from '../../util/colorUtils';\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          'background-color': `${color}`,\n          'border-color': `${color}`\n        };\n      } else if (color) {\n        data.class = { ...data.class,\n          [color]: true\n        };\n      }\n\n      return data;\n    },\n\n    setTextColor(color, data = {}) {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = { ...data.style,\n          color: `${color}`,\n          'caret-color': `${color}`\n        };\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2);\n        data.class = { ...data.class,\n          [colorName + '--text']: true\n        };\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}