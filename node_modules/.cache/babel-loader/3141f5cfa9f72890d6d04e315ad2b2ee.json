{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/components/VGrid/VCol.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/components/VGrid/VCol.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":1617458485530},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _objectSpread from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nvar breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nvar breakpointProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n}();\n\nvar offsetProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar orderProps = function () {\n  return breakpoints.reduce(function (props, val) {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n}();\n\nvar propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  var className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\n\nvar cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: _objectSpread({\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    }\n  }, breakpointProps, {\n    offset: {\n      type: [String, Number],\n      default: null\n    }\n  }, offsetProps, {\n    order: {\n      type: [String, Number],\n      default: null\n    }\n  }, orderProps, {\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: function validator(str) {\n        return ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str);\n      }\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  }),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children,\n        parent = _ref.parent;\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    var cacheKey = '';\n\n    for (var prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    var classList = cache.get(cacheKey);\n\n    if (!classList) {\n      (function () {\n        var _classList$push;\n\n        classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n        var type;\n\n        for (type in propMap) {\n          propMap[type].forEach(function (prop) {\n            var value = props[prop];\n            var className = breakpointClass(type, prop, value);\n            if (className) classList.push(className);\n          });\n        }\n\n        var hasColClasses = classList.some(function (className) {\n          return className.startsWith('col-');\n        });\n        classList.push((_classList$push = {\n          // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n          col: !hasColClasses || !props.cols\n        }, _defineProperty(_classList$push, \"col-\".concat(props.cols), props.cols), _defineProperty(_classList$push, \"offset-\".concat(props.offset), props.offset), _defineProperty(_classList$push, \"order-\".concat(props.order), props.order), _defineProperty(_classList$push, \"align-self-\".concat(props.alignSelf), props.alignSelf), _classList$push));\n        cache.set(cacheKey, classList);\n      })();\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n}); //# sourceMappingURL=VCol.js.map",{"version":3,"sources":["node_modules/vuetify/lib/components/VGrid/VCol.js"],"names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","includes","str","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set","class"],"mappings":"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","sourceRoot":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter","sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VCol.js.map"]}]}