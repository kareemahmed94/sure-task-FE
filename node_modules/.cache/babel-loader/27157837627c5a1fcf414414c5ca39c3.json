{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/components/VAppBar/VAppBar.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/components/VAppBar/VAppBar.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":1617458485530},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.string.fixed\";\nimport _objectSpread from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from '../VToolbar/VToolbar'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport Scrollable from '../../mixins/scrollable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll: Scroll\n  },\n  provide: function provide() {\n    return {\n      VAppBar: this\n    };\n  },\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isActive: this.value\n    };\n  },\n  computed: {\n    applicationProperty: function applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsy, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n    classes: function classes() {\n      return _objectSpread({}, VToolbar.options.computed.classes.call(this), {\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      });\n    },\n    scrollRatio: function scrollRatio() {\n      var threshold = this.computedScrollThreshold;\n      return Math.max((threshold - this.currentScroll) / threshold, 0);\n    },\n    computedContentHeight: function computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      var min = this.dense ? 48 : 56;\n      var max = this.computedOriginalHeight;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedFontSize: function computedFontSize() {\n      if (!this.isProminent) return undefined;\n      var min = 1.25;\n      var max = 1.5;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedLeft: function computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n    computedMarginTop: function computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n    computedOpacity: function computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      return this.scrollRatio;\n    },\n    computedOriginalHeight: function computedOriginalHeight() {\n      var height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n    computedRight: function computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n    computedScrollThreshold: function computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n    computedTransform: function computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      var scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n    hideShadow: function hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n    isCollapsed: function isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n    isProminent: function isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n    styles: function styles() {\n      return _objectSpread({}, VToolbar.options.computed.styles.call(this), {\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: \"translateY(\".concat(convertToUnit(this.computedTransform), \")\"),\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      });\n    }\n  },\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform: function computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n    invertedScroll: function invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    }\n  },\n  created: function created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n  methods: {\n    genBackground: function genBackground() {\n      var render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n    updateApplication: function updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n    thresholdMet: function thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n  },\n  render: function render(h) {\n    var render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n}); //# sourceMappingURL=VAppBar.js.map",{"version":3,"sources":["node_modules/vuetify/lib/components/VAppBar/VAppBar.js"],"names":["VToolbar","Scroll","Applicationable","Scrollable","SSRBootable","Toggleable","convertToUnit","mixins","baseMixins","extend","name","directives","provide","VAppBar","props","clippedLeft","Boolean","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","value","type","default","data","isActive","computed","applicationProperty","bottom","canScroll","options","call","isBooted","classes","collapse","absolute","app","fixed","hideShadow","currentScroll","scrollRatio","threshold","computedScrollThreshold","Math","max","computedContentHeight","min","dense","computedOriginalHeight","computedFontSize","isProminent","undefined","computedLeft","$vuetify","application","left","computedMarginTop","bar","computedOpacity","height","isExtended","parseInt","extensionHeight","computedRight","right","scrollThreshold","Number","computedTransform","computedHeight","isCollapsed","styles","fontSize","marginTop","transform","watch","callUpdate","val","created","methods","genBackground","render","_b","tag","style","opacity","updateApplication","thresholdMet","isScrollingUp","currentThreshold","savedScroll","h","push","arg","scrollTarget","onScroll"],"mappings":"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","sourceRoot":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter","sourcesContent":["// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from '../VToolbar/VToolbar'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport Scrollable from '../../mixins/scrollable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll\n  },\n\n  provide() {\n    return {\n      VAppBar: this\n    };\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      isActive: this.value\n    };\n  },\n\n  computed: {\n    applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n\n    canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsy, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n\n    classes() {\n      return { ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      };\n    },\n\n    scrollRatio() {\n      const threshold = this.computedScrollThreshold;\n      return Math.max((threshold - this.currentScroll) / threshold, 0);\n    },\n\n    computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      const min = this.dense ? 48 : 56;\n      const max = this.computedOriginalHeight;\n      return min + (max - min) * this.scrollRatio;\n    },\n\n    computedFontSize() {\n      if (!this.isProminent) return undefined;\n      const min = 1.25;\n      const max = 1.5;\n      return min + (max - min) * this.scrollRatio;\n    },\n\n    computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n\n    computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n\n    computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      return this.scrollRatio;\n    },\n\n    computedOriginalHeight() {\n      let height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n\n    computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n\n    computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n\n    computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      const scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n\n    hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n\n    isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n\n    isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n\n    styles() {\n      return { ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      };\n    }\n\n  },\n  watch: {\n    canScroll: 'onScroll',\n\n    computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n\n    invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    }\n\n  },\n\n  created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n\n  methods: {\n    genBackground() {\n      const render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n\n    updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n\n    thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n\n  },\n\n  render(h) {\n    const render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n\n});\n//# sourceMappingURL=VAppBar.js.map"]}]}