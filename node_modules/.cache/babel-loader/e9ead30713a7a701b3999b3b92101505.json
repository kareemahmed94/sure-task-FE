{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/services/theme/index.js","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vuetify/lib/services/theme/index.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":1617458485530},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.object.assign\";\nimport _classCallCheck from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _inherits from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/inherits\";\nimport _createClass from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport _possibleConstructorReturn from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/@babel/runtime/helpers/builtin/es6/getPrototypeOf\";\n\n/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils';\nimport { getNestedValue } from '../../util/helpers'; // Types\n\nimport Vue from 'vue';\nexport var Theme =\n/*#__PURE__*/\nfunction (_Service) {\n  function Theme(preset) {\n    var _this;\n\n    _classCallCheck(this, Theme);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Theme).call(this));\n    _this.disabled = false;\n    _this.isDark = null;\n    _this.unwatch = null;\n    _this.vueMeta = null;\n    var _preset$Theme$propert = preset[Theme.property],\n        dark = _preset$Theme$propert.dark,\n        disable = _preset$Theme$propert.disable,\n        options = _preset$Theme$propert.options,\n        themes = _preset$Theme$propert.themes;\n    _this.dark = Boolean(dark);\n    _this.defaults = _this.themes = themes;\n    _this.options = options;\n\n    if (disable) {\n      _this.disabled = true;\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.themes = {\n      dark: _this.fillVariant(themes.dark, true),\n      light: _this.fillVariant(themes.light, false)\n    };\n    return _this;\n  } // When setting css, check for element and apply new values\n\n  /* eslint-disable-next-line accessor-pairs */\n\n\n  _createClass(Theme, [{\n    key: \"applyTheme\",\n    // Apply current theme default\n    // only called on client side\n    value: function applyTheme() {\n      if (this.disabled) return this.clearCss();\n      this.css = this.generatedStyles;\n    }\n  }, {\n    key: \"clearCss\",\n    value: function clearCss() {\n      this.css = '';\n    } // Initialize theme for SSR and SPA\n    // Attach to ssrContext head or\n    // apply new theme to document\n\n  }, {\n    key: \"init\",\n    value: function init(root, ssrContext) {\n      if (this.disabled) return;\n      /* istanbul ignore else */\n\n      if (root.$meta) {\n        this.initVueMeta(root);\n      } else if (ssrContext) {\n        this.initSSR(ssrContext);\n      }\n\n      this.initTheme(root);\n    } // Allows for you to set target theme\n\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme, value) {\n      this.themes[theme] = Object.assign(this.themes[theme], value);\n      this.applyTheme();\n    } // Reset theme defaults\n\n  }, {\n    key: \"resetThemes\",\n    value: function resetThemes() {\n      this.themes.light = Object.assign({}, this.defaults.light);\n      this.themes.dark = Object.assign({}, this.defaults.dark);\n      this.applyTheme();\n    } // Check for existence of style element\n\n  }, {\n    key: \"checkOrCreateStyleElement\",\n    value: function checkOrCreateStyleElement() {\n      this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n      /* istanbul ignore next */\n\n      if (this.styleEl) return true;\n      this.genStyleElement(); // If doesn't have it, create it\n\n      return Boolean(this.styleEl);\n    }\n  }, {\n    key: \"fillVariant\",\n    value: function fillVariant() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var dark = arguments.length > 1 ? arguments[1] : undefined;\n      var defaultTheme = this.themes[dark ? 'dark' : 'light'];\n      return Object.assign({}, defaultTheme, theme);\n    } // Generate the style element\n    // if applicable\n\n  }, {\n    key: \"genStyleElement\",\n    value: function genStyleElement() {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') return;\n      /* istanbul ignore next */\n\n      this.styleEl = document.createElement('style');\n      this.styleEl.type = 'text/css';\n      this.styleEl.id = 'vuetify-theme-stylesheet';\n\n      if (this.options.cspNonce) {\n        this.styleEl.setAttribute('nonce', this.options.cspNonce);\n      }\n\n      document.head.appendChild(this.styleEl);\n    }\n  }, {\n    key: \"initVueMeta\",\n    value: function initVueMeta(root) {\n      var _this2 = this;\n\n      this.vueMeta = root.$meta();\n\n      if (this.isVueMeta23) {\n        // vue-meta needs to apply after mounted()\n        root.$nextTick(function () {\n          _this2.applyVueMeta23();\n        });\n        return;\n      }\n\n      var metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n      var metaInfo = root.$options[metaKeyName] || {};\n\n      root.$options[metaKeyName] = function () {\n        metaInfo.style = metaInfo.style || [];\n        var vuetifyStylesheet = metaInfo.style.find(function (s) {\n          return s.id === 'vuetify-theme-stylesheet';\n        });\n\n        if (!vuetifyStylesheet) {\n          metaInfo.style.push({\n            cssText: _this2.generatedStyles,\n            type: 'text/css',\n            id: 'vuetify-theme-stylesheet',\n            nonce: (_this2.options || {}).cspNonce\n          });\n        } else {\n          vuetifyStylesheet.cssText = _this2.generatedStyles;\n        }\n\n        return metaInfo;\n      };\n    }\n  }, {\n    key: \"applyVueMeta23\",\n    value: function applyVueMeta23() {\n      var _this$vueMeta$addApp = this.vueMeta.addApp('vuetify'),\n          set = _this$vueMeta$addApp.set;\n\n      set({\n        style: [{\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: this.options.cspNonce\n        }]\n      });\n    }\n  }, {\n    key: \"initSSR\",\n    value: function initSSR(ssrContext) {\n      // SSR\n      var nonce = this.options.cspNonce ? \" nonce=\\\"\".concat(this.options.cspNonce, \"\\\"\") : '';\n      ssrContext.head = ssrContext.head || '';\n      ssrContext.head += \"<style type=\\\"text/css\\\" id=\\\"vuetify-theme-stylesheet\\\"\".concat(nonce, \">\").concat(this.generatedStyles, \"</style>\");\n    }\n  }, {\n    key: \"initTheme\",\n    value: function initTheme(root) {\n      var _this3 = this;\n\n      // Only watch for reactivity on client side\n      if (typeof document === 'undefined') return; // If we get here somehow, ensure\n      // existing instance is removed\n\n      if (this.unwatch) {\n        this.unwatch();\n        this.unwatch = null;\n      } // TODO: Update to use RFC if merged\n      // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n\n      root.$once('hook:created', function () {\n        var obs = Vue.observable({\n          themes: _this3.themes\n        });\n        _this3.unwatch = root.$watch(function () {\n          return obs.themes;\n        }, function () {\n          return _this3.applyTheme();\n        }, {\n          deep: true\n        });\n      });\n      this.applyTheme();\n    }\n  }, {\n    key: \"css\",\n    set: function set(val) {\n      if (this.vueMeta) {\n        if (this.isVueMeta23) {\n          this.applyVueMeta23();\n        }\n\n        return;\n      }\n\n      this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n    }\n  }, {\n    key: \"dark\",\n    set: function set(val) {\n      var oldDark = this.isDark;\n      this.isDark = val; // Only apply theme after dark\n      // has already been set before\n\n      oldDark != null && this.applyTheme();\n    },\n    get: function get() {\n      return Boolean(this.isDark);\n    }\n  }, {\n    key: \"currentTheme\",\n    get: function get() {\n      var target = this.dark ? 'dark' : 'light';\n      return this.themes[target];\n    }\n  }, {\n    key: \"generatedStyles\",\n    get: function get() {\n      var theme = this.parsedTheme;\n      /* istanbul ignore next */\n\n      var options = this.options || {};\n      var css;\n\n      if (options.themeCache != null) {\n        css = options.themeCache.get(theme);\n        /* istanbul ignore if */\n\n        if (css != null) return css;\n      }\n\n      css = ThemeUtils.genStyles(theme, options.customProperties);\n\n      if (options.minifyTheme != null) {\n        css = options.minifyTheme(css);\n      }\n\n      if (options.themeCache != null) {\n        options.themeCache.set(theme, css);\n      }\n\n      return css;\n    }\n  }, {\n    key: \"parsedTheme\",\n    get: function get() {\n      return ThemeUtils.parse(this.currentTheme || {}, undefined, getNestedValue(this.options, ['variations'], true));\n    } // Is using v2.3 of vue-meta\n    // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n  }, {\n    key: \"isVueMeta23\",\n    get: function get() {\n      return typeof this.vueMeta.addApp === 'function';\n    }\n  }]);\n\n  _inherits(Theme, _Service);\n\n  return Theme;\n}(Service);\nTheme.property = 'theme'; //# sourceMappingURL=index.js.map",{"version":3,"sources":["node_modules/vuetify/lib/services/theme/index.js"],"names":["Service","ThemeUtils","getNestedValue","Vue","Theme","preset","disabled","isDark","unwatch","vueMeta","property","dark","disable","options","themes","Boolean","defaults","fillVariant","light","clearCss","css","generatedStyles","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","theme","value","Object","assign","applyTheme","styleEl","document","getElementById","genStyleElement","defaultTheme","createElement","type","id","cspNonce","setAttribute","head","appendChild","isVueMeta23","$nextTick","applyVueMeta23","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","push","cssText","nonce","addApp","set","$once","obs","observable","$watch","deep","val","checkOrCreateStyleElement","innerHTML","oldDark","target","parsedTheme","themeCache","get","genStyles","customProperties","minifyTheme","parse","currentTheme","undefined"],"mappings":"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","sourceRoot":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils';\nimport { getNestedValue } from '../../util/helpers'; // Types\n\nimport Vue from 'vue';\nexport class Theme extends Service {\n  constructor(preset) {\n    super();\n    this.disabled = false;\n    this.isDark = null;\n    this.unwatch = null;\n    this.vueMeta = null;\n    const {\n      dark,\n      disable,\n      options,\n      themes\n    } = preset[Theme.property];\n    this.dark = Boolean(dark);\n    this.defaults = this.themes = themes;\n    this.options = options;\n\n    if (disable) {\n      this.disabled = true;\n      return;\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false)\n    };\n  } // When setting css, check for element and apply new values\n\n  /* eslint-disable-next-line accessor-pairs */\n\n\n  set css(val) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23();\n      }\n\n      return;\n    }\n\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n  }\n\n  set dark(val) {\n    const oldDark = this.isDark;\n    this.isDark = val; // Only apply theme after dark\n    // has already been set before\n\n    oldDark != null && this.applyTheme();\n  }\n\n  get dark() {\n    return Boolean(this.isDark);\n  } // Apply current theme default\n  // only called on client side\n\n\n  applyTheme() {\n    if (this.disabled) return this.clearCss();\n    this.css = this.generatedStyles;\n  }\n\n  clearCss() {\n    this.css = '';\n  } // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n\n\n  init(root, ssrContext) {\n    if (this.disabled) return;\n    /* istanbul ignore else */\n\n    if (root.$meta) {\n      this.initVueMeta(root);\n    } else if (ssrContext) {\n      this.initSSR(ssrContext);\n    }\n\n    this.initTheme(root);\n  } // Allows for you to set target theme\n\n\n  setTheme(theme, value) {\n    this.themes[theme] = Object.assign(this.themes[theme], value);\n    this.applyTheme();\n  } // Reset theme defaults\n\n\n  resetThemes() {\n    this.themes.light = Object.assign({}, this.defaults.light);\n    this.themes.dark = Object.assign({}, this.defaults.dark);\n    this.applyTheme();\n  } // Check for existence of style element\n\n\n  checkOrCreateStyleElement() {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n    /* istanbul ignore next */\n\n    if (this.styleEl) return true;\n    this.genStyleElement(); // If doesn't have it, create it\n\n    return Boolean(this.styleEl);\n  }\n\n  fillVariant(theme = {}, dark) {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\n    return Object.assign({}, defaultTheme, theme);\n  } // Generate the style element\n  // if applicable\n\n\n  genStyleElement() {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return;\n    /* istanbul ignore next */\n\n    this.styleEl = document.createElement('style');\n    this.styleEl.type = 'text/css';\n    this.styleEl.id = 'vuetify-theme-stylesheet';\n\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce);\n    }\n\n    document.head.appendChild(this.styleEl);\n  }\n\n  initVueMeta(root) {\n    this.vueMeta = root.$meta();\n\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23();\n      });\n      return;\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n    const metaInfo = root.$options[metaKeyName] || {};\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || [];\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce\n        });\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles;\n      }\n\n      return metaInfo;\n    };\n  }\n\n  applyVueMeta23() {\n    const {\n      set\n    } = this.vueMeta.addApp('vuetify');\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce\n      }]\n    });\n  }\n\n  initSSR(ssrContext) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : '';\n    ssrContext.head = ssrContext.head || '';\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\n  }\n\n  initTheme(root) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\n    // existing instance is removed\n\n    if (this.unwatch) {\n      this.unwatch();\n      this.unwatch = null;\n    } // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({\n        themes: this.themes\n      });\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), {\n        deep: true\n      });\n    });\n    this.applyTheme();\n  }\n\n  get currentTheme() {\n    const target = this.dark ? 'dark' : 'light';\n    return this.themes[target];\n  }\n\n  get generatedStyles() {\n    const theme = this.parsedTheme;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    let css;\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme);\n      /* istanbul ignore if */\n\n      if (css != null) return css;\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties);\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css);\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css);\n    }\n\n    return css;\n  }\n\n  get parsedTheme() {\n    return ThemeUtils.parse(this.currentTheme || {}, undefined, getNestedValue(this.options, ['variations'], true));\n  } // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n\n  get isVueMeta23() {\n    return typeof this.vueMeta.addApp === 'function';\n  }\n\n}\nTheme.property = 'theme';\n//# sourceMappingURL=index.js.map"]}]}