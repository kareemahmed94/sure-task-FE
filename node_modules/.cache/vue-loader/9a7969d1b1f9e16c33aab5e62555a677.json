{"remainingRequest":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/pages/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/src/pages/Login.vue","mtime":1617457659002},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kareem/Desktop/dev/kareem/shore/vue-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//eslint-disable-line\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      form: {\n        email: 'admin@example.com',\n        password: 'admin',\n        remember: false,\n      },\n      passwordRules: [\n        (v) => !!v || 'Password is required',\n      ],\n      message: false,\n      message_type: \"success\",\n      message_content: \"\",\n      email: '',\n      emailRules: [\n        (v) => !!v || 'E-mail is required',\n      ],\n      options: {\n        isLoggingIn: true,\n        shouldStayLoggedIn: true,\n      },\n    }\n  },\n  mounted() {\n    console.log(this.$auth.redirect());\n  },\n  methods: {\n    errors(res) {\n      this.form.errors = Object.fromEntries(res.data.errors.map(item => [item.field, item.msg]));\n    },\n    login() {\n      this.$auth\n          .login({\n            body: this.form.body,\n            data: this.form.body,\n            remember: this.form.remember,\n          })\n          .then((res) => {\n            if (res.data.status === 200) {\n              this.$router.push({name: 'home'});\n            } else {\n              this.message_type = \"error\"\n              this.message_content = res.data.message\n              this.message = true\n            }\n          }, (res) => {\n            this.errors(\n                res.response || // Axios\n                res             // VueResource\n            );\n          })\n    },\n  }\n}\n\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/pages","sourcesContent":["<!--eslint-disable-line-->\n<template>\n  <div>\n    <v-app>\n      <main>\n        <v-container fluid fill-height class=\"loginOverlay\">\n          <v-layout flex align-center justify-center>\n            <v-flex xs12 sm4 elevation-6>\n              <v-toolbar class=\"pt-5 blue darken-4\">\n                <v-toolbar-items>\n                  <v-toolbar-title class=\"white--text\"><h4>Welcome Back</h4></v-toolbar-title>\n                </v-toolbar-items>\n              </v-toolbar>\n              <v-card>\n                <v-card-text class=\"pt-4\">\n                  <div>\n                    <v-form v-model=\"valid\" ref=\"form\">\n                      <v-text-field\n                          label=\"Enter your e-mail address\"\n                          v-model=\"form.email\"\n                          :rules=\"emailRules\"\n                          required\n                      ></v-text-field>\n                      <v-text-field\n                          label=\"Enter your password\"\n                          v-model=\"form.password\"\n                          min=\"8\"\n                          :append-icon=\"e1 ? 'visibility' : 'visibility_off'\"\n                          :append-icon-cb=\"() => (e1 = !e1)\"\n                          :type=\"e1 ? 'password' : 'text'\"\n                          :rules=\"passwordRules\"\n                          counter\n                          required\n                      ></v-text-field>\n                      <v-layout justify-space-between>\n                        <v-btn @click=\"login\" :class=\" { 'blue darken-4 white--text' : valid, disabled: !valid }\">\n                          Login\n                        </v-btn>\n                        <a href=\"\">Forgot Password</a>\n                      </v-layout>\n                    </v-form>\n                  </div>\n                </v-card-text>\n              </v-card>\n            </v-flex>\n          </v-layout>\n        </v-container>\n        <a href=\"https://unsplash.com/photos/i6Wc5qZO5MQ\" target=\"_blank\">\n          <v-card class=\"photoCredit teal\">\n            <v-card-title>\n              <div class=\"white--text\">\n                Photo by Tatyana Dobreva on Unsplash\n              </div>\n            </v-card-title>\n          </v-card>\n        </a>\n      </main>\n    </v-app>\n    <v-snackbar\n        v-model=\"message\"\n        :color=\"message_type\"\n        :vertical=\"true\"\n    >\n      {{ message_content }}\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\n//eslint-disable-line\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      form: {\n        email: 'admin@example.com',\n        password: 'admin',\n        remember: false,\n      },\n      passwordRules: [\n        (v) => !!v || 'Password is required',\n      ],\n      message: false,\n      message_type: \"success\",\n      message_content: \"\",\n      email: '',\n      emailRules: [\n        (v) => !!v || 'E-mail is required',\n      ],\n      options: {\n        isLoggingIn: true,\n        shouldStayLoggedIn: true,\n      },\n    }\n  },\n  mounted() {\n    console.log(this.$auth.redirect());\n  },\n  methods: {\n    errors(res) {\n      this.form.errors = Object.fromEntries(res.data.errors.map(item => [item.field, item.msg]));\n    },\n    login() {\n      this.$auth\n          .login({\n            body: this.form.body,\n            data: this.form.body,\n            remember: this.form.remember,\n          })\n          .then((res) => {\n            if (res.data.status === 200) {\n              this.$router.push({name: 'home'});\n            } else {\n              this.message_type = \"error\"\n              this.message_content = res.data.message\n              this.message = true\n            }\n          }, (res) => {\n            this.errors(\n                res.response || // Axios\n                res             // VueResource\n            );\n          })\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n</style>"]}]}